plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.koo'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // mybatis
    implementation 'org.mybatis:mybatis:3.5.13'

    // logging
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    implementation 'org.slf4j:slf4j-api:2.0.9'

    // db
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    implementation 'com.oracle.database.jdbc:ojdbc8:23.6.0.24.10'
    implementation 'com.oracle.ojdbc:orai18n:19.3.0.0' // 오라클 문자 집합 문제 해결
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // jasypt 암호화 표준
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

    // lombok
    implementation 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    // aop
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // security, jwt
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.apache.commons:commons-lang3:3.19.0'

    // @ConfigurationProperties 애노테이션을 분석하여 자동으로 메타데이터 파일(spring-configuration-metadata.json)을 생성
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs = ['-parameters']
}