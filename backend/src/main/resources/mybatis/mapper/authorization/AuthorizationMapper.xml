<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koo.bonscore.biz.authorization.mapper.AuthorizationMapper">
    <!-- 메뉴 정보 조회 -->
    <select id="getMenuByRole" resultType="com.koo.bonscore.biz.authorization.dto.res.MenuByRoleDto" parameterType="com.koo.bonscore.biz.authorization.dto.req.AuthorizationDto">
       SELECT A.MENU_ID
            , B.MENU_NAME
            , B.MENU_URL
            , B.PARENT_MENU_ID
            , B.SORT_ORDER
            , B.IS_VISIBLE
         FROM TB_ROLE_MENU A
            , TB_MENU      B
        WHERE A.ROLE_ID = ( SELECT A.ROLE_ID FROM KOOBS97.TB_USER_ROLE A WHERE A.USER_ID = #{userId} )
          AND A.MENU_ID = B.MENU_ID
        ORDER BY B.SORT_ORDER
    </select>

    <!-- 활동 유형 조회 -->
    <select id="getActivityType" resultType="com.koo.bonscore.biz.authorization.dto.res.LogResDto" parameterType="com.koo.bonscore.biz.authorization.dto.req.LogReqDto">
       SELECT DISTINCT A.ACTIVITY_TYPE
         FROM USER_ACTIVITY_LOG A
    </select>

    <!-- 결과 유형 조회 -->
    <select id="getActivityResult" resultType="com.koo.bonscore.biz.authorization.dto.res.LogResDto" parameterType="com.koo.bonscore.biz.authorization.dto.req.LogReqDto">
       SELECT DISTINCT A.ACTIVITY_RESULT
         FROM USER_ACTIVITY_LOG A
    </select>

    <!-- 로그 정보 조회 -->
    <select id="getUserLog" resultType="com.koo.bonscore.biz.authorization.dto.res.LogResDto" parameterType="com.koo.bonscore.biz.authorization.dto.req.LogReqDto">
       SELECT A.LOG_ID
            , A.USER_ID
            , A.ACTIVITY_TYPE
            , A.ACTIVITY_RESULT
            , A.REQUEST_IP
            , A.REQUEST_URI
            , A.REQUEST_METHOD
            , A.ERROR_MESSAGE
            , A.USER_AGENT
            , A.CREATED_AT
         FROM USER_ACTIVITY_LOG A
        WHERE A.CREATED_AT 		BETWEEN TO_DATE(#{startDt}, 'YYYYMMDD') AND TO_DATE(#{endDt}, 'YYYYMMDD') + 0.99999
          AND A.USER_ID 		LIKE '%' || #{userId} || '%'
          AND A.ACTIVITY_TYPE 	LIKE '%' || #{activityType} || '%'
          AND A.ACTIVITY_RESULT LIKE '%' || #{activityResult} || '%'
        ORDER BY A.LOG_ID
    </select>

    <!-- 유저 정보 업데이트 -->
    <update id="updateUserInfo" parameterType="com.koo.bonscore.biz.authorization.dto.req.UpdateUserDto">
       UPDATE /* com.koo.bonscore.biz.authorization.mapper.AuthorizationMapper.updateUserInfo */
              USER_INFO                             /* 유저정보 테이블 */
          SET USER_NAME     = #{userName}           /* 사용자 이름 */
            , EMAIL         = #{email}              /* 이메일 */
            , PHONE_NUMBER  = #{phoneNumber}        /* 사용자 전화번호 */
            , BIRTH_DATE    = #{birthDate}          /* 사용자 생년월일 */
            , GENDER_CODE   = #{genderCode}         /* 성별 코드 */
            , UPDATED_AT    = #{updatedAt}          /* 수정일시 */
        WHERE USER_ID       = #{userId}             /* 아이디 */
    </update>

    <!-- 현재 비밀번호 비교를 위해 해싱된 패스워드 조회 -->
    <select id="getPassword" resultType="String" parameterType="com.koo.bonscore.biz.authorization.dto.req.UpdateUserDto">
       SELECT /* com.koo.bonscore.biz.authorization.mapper.AuthorizationMapper.getPassword */
              PASSWORD_HASH                         /* 비밀번호 해시 */
         FROM USER_INFO                             /* 유저정보 테이블 */
        WHERE USER_ID = #{userId}                   /* 사용자 ID */
        ORDER BY USER_ID DESC
    </select>

    <!-- 비밀번호 변경 -->
    <update id="updatePassword" parameterType="com.koo.bonscore.biz.authorization.dto.req.UpdateUserDto">
       UPDATE /* com.koo.bonscore.biz.authorization.mapper.AuthorizationMapper.updatePassword */
              USER_INFO                             /* 유저정보 테이블 */
          SET PASSWORD_HASH    = #{password}        /* 비밀번호 */
            , PASSWORD_UPDATED = #{passwordUpdated} /* 비밀번호 업데이트 일시 */
            , UPDATED_AT       = #{updatedAt}       /* 수정일시 */
        WHERE USER_ID          = #{userId}          /* 아이디 */
    </update>

</mapper>