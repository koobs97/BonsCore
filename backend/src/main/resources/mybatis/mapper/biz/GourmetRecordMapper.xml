<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koo.bonscore.biz.store.mapper.GourmetRecordMapper">

    <select id="selectRecordId" resultType="long">
        SELECT SEQ_GOURMET_RECORDS.NEXTVAL FROM DUAL
    </select>

    <!-- 맛집 저장소 데이터 저장 -->
    <insert id="insertGourmetRecord" parameterType="com.koo.bonscore.biz.store.dto.req.GourmetRecordCreateRequest">
         MERGE /* com.koo.bonscore.biz.store.mapper.GourmetRecordMapper.insertGourmetRecord */
          INTO GOURMET_RECORDS                          /* 맛집 기록 정보 */
         USING DUAL
            ON ( RECORD_ID = #{recordId} )              /* 맛집 기록 ID */
          WHEN MATCHED THEN
        UPDATE
           SET STORE_NAME       = #{name}               /* 가게 이름 */
             , CATEGORY         = #{category}           /* 카테고리 */
             , VISIT_DATE       = #{visitDate}          /* 방문 날짜 */
             , RATING           = #{rating}             /* 별점 */
             , MEMO             = #{memo}               /* 메모 */
             , REFERENCE_URL    = #{referenceUrl}       /* 참조 URL */
             , UPDATED_AT       = #{updatedAt}          /* 수정일시 */
      WHEN NOT MATCHED THEN
        INSERT
             (
               RECORD_ID
             , USER_ID
             , STORE_NAME
             , CATEGORY
             , VISIT_DATE
             , RATING
             , MEMO
             , REFERENCE_URL
             , CREATED_AT
             , UPDATED_AT
             )
        VALUES
             (
               #{recordId}
             , #{userId}
             , #{name}
             , #{category}
             , #{visitDate}
             , #{rating}
             , #{memo}
             , #{referenceUrl}
             , #{createdAt}
             , #{updatedAt}
             )
    </insert>

    <!-- 여러 이미지 정보를 한 번에 저장 -->
    <insert id="insertGourmetImages" parameterType="com.koo.bonscore.biz.store.dto.req.GourmetRecordCreateRequest">
      INSERT /* com.koo.bonscore.biz.store.mapper.GourmetRecordMapper.insertGourmetImages */
        INTO GOURMET_IMAGES                             /* 맛집 기록 이미지 파일 정보 */
           (
             IMAGE_ID                                   /* 이미지 ID */
           , RECORD_ID                                  /* 이미지가 속한 맛집 기록 ID */
           , ORIGINAL_FILE_NAME                         /* 원본 파일명 */
           , STORED_FILE_NAME                           /* 저장 파일명 */
           , IMAGE_URL                                  /* 다운로드 URL */
           , FILE_SIZE                                  /* 파일 크기 (단위: byte) */
           , CREATED_AT                                 /* 레코드 생성 일시 */
           )
      SELECT SEQ_GOURMET_IMAGES.NEXTVAL
           , A.*
        FROM (
            <foreach collection="images" item="image" separator=" UNION ALL ">
                SELECT #{recordId}                 AS RECORD_ID
                     , #{image.originalFileName}   AS ORIGINAL_FILE_NAME
                     , #{image.storedFileName}     AS STORED_FILE_NAME
                     , #{image.imageUrl}           AS IMAGE_URL
                     , #{image.fileSize}           AS FILE_SIZE
                     , #{createdAt}                AS CREATED_AT
                  FROM DUAL
            </foreach>
            ) A
    </insert>

    <resultMap id="gourmetRecordWithImagesMap" type="com.koo.bonscore.biz.store.dto.res.GourmetRecordDto">
        <!-- 기본키(ID) 매핑: MyBatis가 언제 새로운 부모 객체를 만들어야 할지 판단하는 기준 -->
        <id property="id" column="RECORD_ID"/>

        <!-- GOURMET_RECORDS 테이블의 나머지 컬럼 매핑 -->
        <result property="name" column="STORE_NAME"/>
        <result property="category" column="CATEGORY"/>
        <result property="visitDate" column="VISIT_DATE"/>
        <result property="rating" column="RATING"/>
        <result property="memo" column="MEMO"/>
        <result property="referenceUrl" column="REFERENCE_URL"/>

        <!-- 1:N 관계인 이미지 목록(List<GourmetImageDto>) 매핑 -->
        <!-- property="images": GourmetRecordDto 클래스의 필드명 -->
        <!-- ofType: List에 들어갈 객체의 타입 -->
        <collection property="images" ofType="com.koo.bonscore.biz.store.dto.req.GourmetImageDto">
            <!-- 이미지 객체의 유니크 ID (필수는 아니지만 권장) -->
            <id property="imageId" column="IMAGE_ID"/>
            <!-- GOURMET_IMAGES 테이블의 컬럼들을 GourmetImageDto 필드에 매핑 -->
            <result property="originalFileName" column="ORIGINAL_FILE_NAME"/>
            <result property="storedFileName" column="STORED_FILE_NAME"/>
            <result property="imageUrl" column="IMAGE_URL"/>
            <result property="fileSize" column="FILE_SIZE"/>
        </collection>
    </resultMap>

    <!-- 사용자 ID로 맛집 기록 목록 조회 (이미지 포함) -->
    <select id="selectGourmetRecordsByUserId" parameterType="string" resultMap="gourmetRecordWithImagesMap">
        SELECT /* com.koo.bonscore.biz.store.mapper.GourmetRecordMapper.selectGourmetRecordsByUserId */
               R.RECORD_ID
             , R.STORE_NAME
             , R.CATEGORY
             , R.VISIT_DATE
             , R.RATING
             , R.MEMO
             , R.REFERENCE_URL
             , I.IMAGE_ID
             , I.ORIGINAL_FILE_NAME
             , I.STORED_FILE_NAME
             , I.IMAGE_URL
             , I.FILE_SIZE
        FROM GOURMET_RECORDS R
   LEFT JOIN GOURMET_IMAGES  I
          ON R.RECORD_ID = I.RECORD_ID
       WHERE R.USER_ID   = #{userId}
    ORDER BY R.VISIT_DATE DESC, R.CREATED_AT DESC
    </select>

</mapper>